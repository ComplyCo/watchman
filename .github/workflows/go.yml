name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Go Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.18
      id: go

    - name: Setup Node / NPM
      if: runner.os == 'Linux'
      uses: actions/setup-node@v2-beta
      with:
        node-version: '16'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install make (Windows)
      if: runner.os == 'Windows'
      run: choco install -y make mingw

    - name: Build
      run: make build

    - name: Setup
      run: docker-compose up -d mysql

    - name: Check
      run: make check
      env:
        GOLANGCI_LINTERS: gosec

    - name: Upload Code Coverage
      if: runner.os == 'Linux'
      run: bash <(curl -s https://codecov.io/bash)

    - name: Docker Build
      if: runner.os == 'Linux'
      run: make docker-hub

    # disable and stop mono-xsp4.service
    # Details: https://github.com/actions/virtual-environments/issues/2821
    - name: Ubuntu 20.04 Cleanup
      if: runner.os == 'Linux'
      run: |
        sudo systemctl disable mono-xsp4.service || true
        sudo systemctl stop mono-xsp4.service || true
        sudo killall mono || true

    - name: Tests
      if: runner.os == 'Linux'
      run: make build-batchsearch && make test-integration

    - name: Test Cleanup
      if: runner.os == 'Linux' && always()
      run: make clean-integration
